apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: dockerfile-lint
  annotations:
    description: Optional linter for Dockerfiles; if a ".hadolint" file is in the repo root, this task automatically picks up; See Hadolint on Dockerhub for more
    app.openshift.io/description: Optional linter for Dockerfiles; if a ".hadolint" file is in the repo root, this task automatically picks up
    app.openshift.io/vcs-uri: https://github.com/IBM/ibm-garage-tekton-tasks
    app.openshift.io/vcs-ref: master
  labels:
    version: 0.0.0
spec:
  params:
    - name: git-url
    - name: git-revision
      default: master
    - name: source-dir
      default: /source
    - name: DOCKERFILE
      default: Dockerfile
    - name: LINT_IMAGE
      default: ghcr.io/hadolint/hadolint:v2.3.0-alpine
  volumes:
    - name: source
      emptyDir: {}
  stepTemplate:
    volumeMounts:
      - name: source
        mountPath: $(params.source-dir)
  steps:
    - name: git-clone
      image: alpine/git
      env:
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: password
              optional: true
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: username
              optional: true
      script: |
        set +x
        if [[ -n "${GIT_USERNAME}" ]] && [[ -n "${GIT_PASSWORD}" ]]; then
            git clone "$(echo $(params.git-url) | awk -F '://' '{print $1}')://${GIT_USERNAME}:${GIT_PASSWORD}@$(echo $(params.git-url) | awk -F '://' '{print $2}')" $(params.source-dir)
        else
            set -x
            git clone $(params.git-url) $(params.source-dir)
        fi
        set -x
        cd $(params.source-dir)
        git checkout $(params.git-revision)
    - name: lint
      image: $(params.LINT_IMAGE)
      workingDir: $(params.source-dir)
      script: |
        HADOLINTFILE="$(params.source-dir)"/.hadolint.yaml

        if [ -f "${HADOLINTFILE}" ]; then
          echo "In this step, hadolint will lint your Dockerfile, using .hadolint.yaml in your repository, with the following rules: "
          cat ${HADOLINTFILE}
          echo "For more information about hadolint please refer to https://cloudnativetoolkit.dev/"
          hadolint --config ${HADOLINTFILE} $(params.DOCKERFILE)
        else
          echo "In this step, hadolint will lint your Dockerfile"
          echo "If you would like to configure hadolint, please see https://github.com/hadolint/hadolint"
          echo "For more information about hadolint please refer to https://cloudnativetoolkit.dev/"
          hadolint $(params.DOCKERFILE)
        fi
